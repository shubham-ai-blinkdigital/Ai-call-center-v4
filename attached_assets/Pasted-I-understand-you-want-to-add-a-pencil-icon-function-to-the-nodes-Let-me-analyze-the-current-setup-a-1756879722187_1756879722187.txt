I understand you want to add a pencil icon function to the nodes. Let me analyze the current setup and discuss the best approach to achieve this functionality.

Current Node Click Behavior
Right now, when you click anywhere on a node, it triggers the onNodeClick function in flowchart-canvas.tsx, which:

Sets the selectedNode state
Opens the NodeEditorDrawer (setIsEditorOpen(true))
How to Add Pencil Icon Functionality
Here are the key approaches we can take:

Approach 1: Add Pencil Icon Inside Each Node Component
Pros:

Clean separation of concerns
Each node handles its own edit trigger
Pencil icon is visually part of the node
Cons:

Need to modify all 5 node components
Need to pass edit handler down through props
Event propagation management required
Approach 2: Add Pencil Icon in ReactFlow's Custom Node Wrapper
Pros:

Single place to add the functionality
Consistent across all node types
Less code duplication
Cons:

More complex prop drilling
Might interfere with ReactFlow's node rendering
Recommended Approach: Modified Approach 1
I recommend Approach 1 with these specific implementation details:

Add an onEdit prop to all node components (GreetingNode, QuestionNode, CustomerResponseNode, etc.)

Modify the nodeTypes creation in flowchart-canvas.tsx to pass the edit handler to each node

Add pencil icon to each node that calls the onEdit function

Handle event propagation so clicking the pencil doesn't trigger the main node click

Implementation Strategy
Step 1: Modify Node Components
Each node component would get:

An onEdit prop function
A pencil icon (using Pencil from lucide-react)
Event handling to prevent event bubbling
Step 2: Update flowchart-canvas.tsx
Create an onEditNode function
Pass this function to each node type in the nodeTypes object
The edit function would set selectedNode and open the drawer
Step 3: Event Handling
Use event.stopPropagation() on pencil click to prevent triggering the main node click
This allows both behaviors: pencil for edit, anywhere else for selection
Alternative: Keep Current Behavior + Add Pencil as Visual Indicator
Another approach would be to:

Keep the current "click anywhere to edit" behavior
Add a pencil icon as a visual indicator only (no separate click handler)
This maintains the simple UX while adding the visual cue users expect
Questions Before Implementation:
Do you want the pencil to be the ONLY way to edit, or should clicking anywhere on the node still work?

Where should the pencil icon be positioned on each node? (top-right corner, bottom-right, etc.)

Should the pencil icon always be visible, or only on hover?

Do you want different edit behaviors for pencil vs. node click, or the same action?

Let me know your preferences and I'll implement the solution accordingly!