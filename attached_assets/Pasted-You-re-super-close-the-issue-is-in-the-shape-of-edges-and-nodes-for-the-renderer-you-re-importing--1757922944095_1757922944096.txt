You’re super close—the issue is in the **shape of edges and nodes for the renderer you’re importing into**, not in your IDs.

Two quick fixes usually make the edges show up:

1. **Edge `type`**
   Your JSON uses `"type": "custom"` on every edge. If your canvas (React Flow or similar) hasn’t registered an edge renderer named `"custom"`, **those edges won’t render**. Switch them to `"default"` (or omit `type` so the default is used).

```diff
-  "type": "custom",
+  "type": "default",
```

2. **Node positions**
   The Bland export includes explicit `position: { x, y }` on every node; your payload doesn’t. Some importers will draw nodes without positions, but many **fail to route edges** until nodes have coordinates. Add a `position` to each node (any numbers are fine to start; you can auto-layout later).

```diff
  {
    "id": "questionNode_1755677933604",
    "type": "Default",
    "data": { ... },
+   "position": { "x": 400, "y": 200 }
  }
```

Why this matters: the “good” Bland file you downloaded shows both patterns—`edges` use `"type":"custom"` **and** every node has a `position`. If you copy only the edges part but skip node positions or don’t register the `custom` edge, edges appear “empty.”&#x20;

---

# Minimal patch to your JSON

If you want the fastest test, do these two changes across your payload:

* Replace all edge `"type": "custom"` → `"default"`.
* Add simple positions to nodes, e.g.:

```json
"nodes": [
  { "id":"1", "type":"Default", "data":{...}, "position":{"x":480,"y":20} },
  { "id":"questionNode_1755677933604", "type":"Default", "data":{...}, "position":{"x":480,"y":180} },
  { "id":"customerResponseNode_1755677940575", "type":"Default", "data":{...}, "position":{"x":280,"y":360} },
  { "id":"customerResponseNode_1755677941671", "type":"Default", "data":{...}, "position":{"x":680,"y":360} },
  { "id":"endCallNode_1755677945787", "type":"End Call", "data":{...}, "position":{"x":480,"y":540} }
]
```

No need to change your `edge.id` pattern—`reactflow__edge-{source}-{target}` is fine, and your `source`/`target` ids already match your nodes.

---

# Quick checklist

* [ ] Edge `type` is supported by your canvas (`"default"` is safest).
* [ ] Every node has a `position: {x,y}`.
* [ ] Every `edge.source` and `edge.target` exists in `nodes[].id`.
* [ ] (Optional) Keep `data.label/description` if your UI uses them; otherwise they’re harmless.

Do those two changes and your edges should render. If you still don’t see them after this, send me the exact viewer (React Flow config, edgeTypes registration) and I’ll tailor the fix.
