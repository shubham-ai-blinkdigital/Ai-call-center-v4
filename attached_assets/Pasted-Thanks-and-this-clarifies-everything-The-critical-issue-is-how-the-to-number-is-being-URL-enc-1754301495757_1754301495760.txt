Thanks ‚Äî and this clarifies everything. The critical issue is **how the `to_number` is being URL-encoded**.

---

### üîç Breakdown

In your **working JavaScript example**, the `to_number` is encoded like this:

```
&to_number=%2B14158552898
```

Which is the URL-encoded version of:

```
+14158552898
```

‚úÖ This matches how Bland.ai expects query parameters ‚Äî **properly encoded**.

---

### ‚ö†Ô∏è Your server-side API was doing:

```ts
blandUrl.searchParams.set('to_number', phoneNumber) // phoneNumber = '+14154231381'
```

The problem here is that `.set()` encodes it correctly when sent through `fetch`, BUT...

If your number is already **double-encoded** or **not in the expected + format**, it will not match anything on Bland's side.

---

### ‚úÖ Fix (Final)

Make sure you encode the number using `encodeURIComponent`:

```ts
blandUrl.searchParams.set('to_number', encodeURIComponent(phoneNumber))
```

Also log the final URL before fetch:

```ts
console.log("üîç Requesting:", blandUrl.toString())
```

---

### ‚úÖ Bonus: You Can Also Try From Both Directions

Just in case the user number might appear as either `from_number` or `to_number`, try both:

```ts
for (const phoneNumber of userPhoneNumbers) {
  const encodedNumber = encodeURIComponent(phoneNumber)

  for (const direction of ["to_number", "from_number"]) {
    const blandUrl = new URL("https://api.bland.ai/v1/calls")
    blandUrl.searchParams.set("limit", "1000")
    blandUrl.searchParams.set("ascending", "false")
    blandUrl.searchParams.set("sort_by", "created_at")
    blandUrl.searchParams.set(direction, encodedNumber)

    console.log(`üìû Querying with ${direction}=${encodedNumber}`)

    const response = await fetch(blandUrl.toString(), {
      method: "GET",
      headers: {
        authorization: blandApiKey,
        "Content-Type": "application/json",
      },
    })
    ...
  }
}
```

---

### ‚úÖ Summary

| Problem                            | Fix                                            |
| ---------------------------------- | ---------------------------------------------- |
| `to_number` not returning results  | Use `encodeURIComponent(phoneNumber)`          |
| Number may appear as `from_number` | Try both `from_number` and `to_number` in loop |
| Need visibility                    | Log final Bland API URL                        |

---

Let me know after trying this ‚Äî if it fetches results correctly, I‚Äôll help you refactor it cleanly.
