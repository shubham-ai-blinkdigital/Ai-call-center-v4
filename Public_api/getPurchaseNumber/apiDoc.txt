
# getPurchaseNumber API Endpoint Documentation

## Overview
The `getPurchaseNumber` API endpoint allows you to retrieve all purchased phone numbers for a specific user by providing their email address. This is a public API endpoint that doesn't require authentication.

## Endpoint Details
- **URL**: `/Public_api/getPurchaseNumber`
- **Method**: `GET`
- **Authentication**: None required
- **Content-Type**: `application/json`

## Parameters

### Query Parameters
| Parameter | Type   | Required | Description                    |
|-----------|--------|----------|--------------------------------|
| `email`   | string | Yes      | The email address of the user  |

## Usage Examples

### Basic Request
```bash
curl -X GET "https://your-domain.com/Public_api/getPurchaseNumber?email=user@example.com"
```

### JavaScript/Fetch
```javascript
const email = "user@example.com";
const response = await fetch(`/Public_api/getPurchaseNumber?email=${encodeURIComponent(email)}`);
const data = await response.json();
console.log(data);
```

### Python
```python
import requests

email = "user@example.com"
response = requests.get(f"https://your-domain.com/Public_api/getPurchaseNumber?email={email}")
data = response.json()
print(data)
```

### Node.js
```javascript
const fetch = require('node-fetch');

async function getPurchaseNumbers(email) {
    const response = await fetch(`https://your-domain.com/Public_api/getPurchaseNumber?email=${email}`);
    return await response.json();
}

getPurchaseNumbers("user@example.com").then(console.log);
```

## Response Format

### Successful Response (HTTP 200)
```json
{
  "success": true,
  "email": "user@example.com",
  "user_name": "John Doe",
  "phoneNumbers": [
    {
      "id": "123",
      "number": "+1234567890",
      "status": "active",
      "location": "San Francisco, CA",
      "type": "Local",
      "purchased_at": "2024-01-15T10:30:00.000Z",
      "user_id": "user-123",
      "monthly_fee": 1.50,
      "pathway_id": "pathway-456",
      "pathway_name": "Pathway 456"
    }
  ],
  "count": 1
}
```

### User Not Found Response (HTTP 200)
```json
{
  "success": false,
  "message": "User not found",
  "email": "nonexistent@example.com",
  "phoneNumbers": [],
  "count": 0
}
```

### Missing Email Parameter (HTTP 400)
```json
{
  "success": false,
  "message": "Email parameter is required"
}
```

### Server Error (HTTP 500)
```json
{
  "success": false,
  "message": "Internal server error"
}
```

## Response Fields

### Root Level Fields
| Field        | Type    | Description                              |
|--------------|---------|------------------------------------------|
| `success`    | boolean | Indicates if the request was successful  |
| `email`      | string  | The email address that was queried       |
| `user_name`  | string  | The name of the user (if found)          |
| `message`    | string  | Error message (only when success=false)  |
| `phoneNumbers` | array | Array of phone number objects           |
| `count`      | number  | Total number of phone numbers returned   |

### Phone Number Object Fields
| Field          | Type    | Description                                  |
|----------------|---------|----------------------------------------------|
| `id`           | string  | Unique identifier for the phone number      |
| `number`       | string  | The actual phone number (e.g., +1234567890) |
| `status`       | string  | Current status (typically "active")         |
| `location`     | string  | Geographic location of the number           |
| `type`         | string  | Type of number (typically "Local")          |
| `purchased_at` | string  | ISO timestamp when number was purchased     |
| `user_id`      | string  | ID of the user who owns the number          |
| `monthly_fee`  | number  | Monthly subscription fee for the number     |
| `pathway_id`   | string  | ID of associated pathway (if any)           |
| `pathway_name` | string  | Name of associated pathway (if any)         |

## Error Handling

The API returns different HTTP status codes based on the situation:

- **200 OK**: Request successful (even if user not found)
- **400 Bad Request**: Missing required email parameter
- **500 Internal Server Error**: Database connection issues or other server errors

## Rate Limiting
Currently, no rate limiting is implemented. Use responsibly.

## Notes
- The endpoint is publicly accessible and doesn't require authentication
- Phone numbers are returned in descending order by purchase date (newest first)
- If a user has no purchased phone numbers, an empty array is returned
- All timestamps are in UTC format
- Phone numbers are trimmed of whitespace for consistency

## Integration Tips
1. Always check the `success` field before processing the response
2. Handle the case where `phoneNumbers` array might be empty
3. Use `encodeURIComponent()` when passing email addresses with special characters
4. The `count` field can be used for pagination or display purposes
5. Store the `pathway_id` if you need to correlate numbers with specific call flows
